{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tab","onSelect","isActive","className","cn","href","id","onClick","event","preventDefault","title","tabs","content","App","useState","selectedTab","setSelectedTab","selectTab","tabId","find","map","ReactDOM","render","document","getElementById"],"mappings":"8LAUaA,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAAlB,OAC7B,oBACEC,UAAWC,IAAG,CAAE,YAAaF,IAC7B,UAAQ,MAFV,SAIE,mBACEG,KAAML,EAAIM,GACV,UAAQ,UACRC,QAAS,SAACC,GACRA,EAAMC,iBACNR,EAASD,EAAIM,KALjB,SAQGN,EAAIU,WCVEC,G,kBAAc,CACzB,CAAEL,GAAI,QAASI,MAAO,QAASE,QAAS,eACxC,CAAEN,GAAI,QAASI,MAAO,QAASE,QAAS,eACxC,CAAEN,GAAI,QAASI,MAAO,QAASE,QAAS,iBAG7BC,EAAU,WAAO,IAAD,IAC3B,EAAsCC,mBAASH,EAAK,GAAGL,IAAvD,mBAAOS,EAAP,KAAoBC,EAApB,KAEMC,EAAY,SAACC,GACbP,EAAKQ,MAAK,SAACnB,GAAD,OAASA,EAAIM,KAAOY,KAChCF,EAAeE,GAEfF,EAAeL,EAAK,GAAGL,KAI3B,OACE,sBAAKH,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,6CACsBQ,EAAKQ,MAAK,SAACnB,GAAD,OAASA,EAAIM,KAAOS,YADpD,aACsB,EAA4CL,SAGlE,sBAAK,UAAQ,gBAAb,UACE,qBAAKP,UAAU,gBAAf,SACE,6BACGQ,EAAKS,KAAI,SAACpB,GAAD,OACR,cAAC,EAAD,CAEEA,IAAKA,EACLC,SAAUgB,EACVf,SAAUF,EAAIM,KAAOS,GAHhBf,EAAIM,WASjB,qBAAKH,UAAU,QAAQ,UAAQ,aAA/B,mBACGQ,EAAKQ,MAAK,SAACnB,GAAD,OAASA,EAAIM,KAAOS,YADjC,aACG,EAA4CH,iBChDvDS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0c9ea34c.chunk.js","sourcesContent":["import type { FC } from 'react';\nimport cn from 'classnames';\nimport type { Tab } from '../../App';\n\ntype Props = {\n  tab: Tab;\n  onSelect: (tabId: string) => void;\n  isActive: boolean;\n};\n\nexport const Tabs: FC<Props> = ({ tab, onSelect, isActive }) => (\n  <li\n    className={cn({ 'is-active': isActive })}\n    data-cy=\"Tab\"\n  >\n    <a\n      href={tab.id}\n      data-cy=\"TabLink\"\n      onClick={(event) => {\n        event.preventDefault();\n        onSelect(tab.id);\n      }}\n    >\n      {tab.title}\n    </a>\n  </li>\n);\n","import { useState } from 'react';\nimport type { FC } from 'react';\nimport { Tabs } from './components/Tabs';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nexport interface Tab {\n  id: string;\n  title: string;\n  content: string;\n}\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0].id);\n\n  const selectTab = (tabId: string) => {\n    if (tabs.find((tab) => tab.id === tabId)) {\n      setSelectedTab(tabId);\n    } else {\n      setSelectedTab(tabs[0].id);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${tabs.find((tab) => tab.id === selectedTab)?.title}`}\n      </h1>\n\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map((tab) => (\n              <Tabs\n                key={tab.id}\n                tab={tab}\n                onSelect={selectTab}\n                isActive={tab.id === selectedTab}\n              />\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {tabs.find((tab) => tab.id === selectedTab)?.content}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}